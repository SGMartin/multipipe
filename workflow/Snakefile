# The main entry point of your workflow.
# After configuring, running snakemake -n in a clone of this repository should successfully execute a dry-run of the workflow.

report: "report/workflow.rst"

include: "rules/common.smk"

OUTDIR = config["outdir"]
FASTQDIR = samples["fastqs"]
PREFIX = samples["prefix"]
read=['1', '2', '3']
lane=config["cellranger"]["lanes"]

def get_resource(rule,resource):
    try:
        return config["resources"][rule][resource]
    except KeyError:
        return config["resources"]["default"][resource]

def get_fastq(dir, folder):
    """Returns a string that uses Snakemake's {} mini language"""
    result = []
    path = os.path.join(dir,folder)
    for p in os.listdir(path):
    # check if current path is a file
        if os.p.isfile(os.p.join(path, p)):
            result.append(p)
    return result

rule all:
    input:
        # The first rule should define the default target files
        # Subsequent target rules can be specified below. They should start with all_*.
        expand(["{OUTDIR}/cellranger_count/{sample}/raw_feature_bc_matrix.h5",
                "{OUTDIR}/cellranger_count/{sample}/filtered_feature_bc_matrix.h5",
                "{OUTDIR}/cellranger_count/{sample}/possorted_genome_bam.bam",
                "{OUTDIR}/qc/{sample}/{prefix}_S1_L00{lane}_R{read}_001.html",
                "{OUTDIR}/qc/{sample}/{prefix}_S1_L00{lane}_R{read}_001_fastqc.zip",
                "{OUTDIR}/mgatk/{sample}/chrM_refAllele.txt"],
                sample=samples['sample'], OUTDIR=OUTDIR, prefix=PREFIX, read=read, lane=lane)


include: "rules/cellranger.smk"
include: "rules/qc.smk"
include: "rules/mgatk.smk"
include: "rules/other.smk"
