# The main entry point of your workflow.
# After configuring, running snakemake -n in a clone of this repository should successfully execute a dry-run of the workflow.
import pandas as pd

report: "report/workflow.rst"
# Include rule files
include: "rules/common.smk"
# Variable declaration
OUTDIR = config["out"]
LOGDIR = config["log"]

try:
    samples = pd.read_csv(config["samples"], sep="\t", comment="#").set_index("sample", drop=False)
    validate(samples, schema="schemas/samples.schema.yaml")
except FileNotFoundError:
    warning(f"ERROR: the samples file ({config['samples']}) does not exist. Please see the README file for details. Quitting now.")
    sys.exit(1)

try:
    units = pd.read_csv(config["units"], dtype=str, sep="\t", comment="#").set_index(["sample", "unit"], drop=False)
    validate(units, schema="schemas/units.schema.yaml")
    units.index = units.index.set_levels([i.astype(str) for i in units.index.levels])  # enforce str in index
except FileNotFoundError:
    warning(f"ERROR: the units file ({config['units']}) does not exist. Please see the README file for details. Quitting now.")
    sys.exit(1)    

# Auxiliary functions
def get_resource(rule,resource):
    try:
        return config["resources"][rule][resource]
    except KeyError:
        return config["resources"]["default"][resource]

def get_fastq(dir, folder):
    """Returns a string that uses Snakemake's {} mini language"""
    result = []
    path = os.path.join(dir,folder)
    for p in os.listdir(path):
    # check if current path is a file
        if os.p.isfile(os.p.join(path, p)):
            result.append(p)
    return result
# Final output 
rule all:
    input:
        # The first rule should define the default target files
        # Subsequent target rules can be specified below. They should start with all_*.
        expand(["{OUTDIR}/cellranger_count/{sample}/outs/singlecell.csv",
                "{OUTDIR}/cellranger_count/{sample}/outs/fragments.tsv.gz",
                "{OUTDIR}/cellranger_count/{sample}/outs/filtered_feature_bc_matrix.h5",
                "{OUTDIR}/cellranger_count/{sample}/outs/possorted_genome_bam.bam",
                "{OUTDIR}/qc/{sample}/multiqc_report.html",
                "{OUTDIR}/mgatk/{sample}/chrM_refAllele.txt",
                "{OUTDIR}/amulet/{sample}/MultipletSummary.txt"
                ], sample=samples['sample'], OUTDIR=OUTDIR)

# Rule files
include: "rules/cellranger.smk"
include: "rules/qc.smk"
include: "rules/mgatk.smk"
include: "rules/amulet.smk"
include: "rules/other.smk"
